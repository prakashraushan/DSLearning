class Solution {
    public List<int> spiralOrder(List<List<int>> A) {
    
        int L = 0;

        int T=0; 

        int B=A.Count-1;

        int R = A[0].Count-1; 
        int dir = 0;
        List<int> result = new List<int>();
        while(T<=B && L<=R)
        {
            if(dir==0)
            {
                for(int i =L;i<=R;i++)
                {
                    result.Add(A[T][i]);
                    //Console.Write(A[T][i]+",");
                }
                T++;
            }
            else if(dir ==1)
            {
                for(int i =T;i<=B;i++)
                {
                    result.Add(A[i][R]);
                    //Console.Write(A[i][R]+",");
                }
                R--;
            }
            else if(dir ==2)
            {
                for(int i = R;i>=L;i--)
                {
                    result.Add(A[B][i]);
                    //Console.Write(A[B][i]+",");
                }
                B--;
            }
            else if(dir ==3)
            {
                for(int i =B;i>=T;i--)
                {
                    result.Add(A[i][L]);
                    //Console.Write(A[i][L]+",");
                }
                L++;
            }
            dir = (dir+1)%4;
        }
        return result;
    }
}
